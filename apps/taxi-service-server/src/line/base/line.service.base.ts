/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Line as PrismaLine } from "@prisma/client";

export class LineServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LineCountArgs, "select">): Promise<number> {
    return this.prisma.line.count(args);
  }

  async lines(args: Prisma.LineFindManyArgs): Promise<PrismaLine[]> {
    return this.prisma.line.findMany(args);
  }
  async line(args: Prisma.LineFindUniqueArgs): Promise<PrismaLine | null> {
    return this.prisma.line.findUnique(args);
  }
  async createLine(args: Prisma.LineCreateArgs): Promise<PrismaLine> {
    return this.prisma.line.create(args);
  }
  async updateLine(args: Prisma.LineUpdateArgs): Promise<PrismaLine> {
    return this.prisma.line.update(args);
  }
  async deleteLine(args: Prisma.LineDeleteArgs): Promise<PrismaLine> {
    return this.prisma.line.delete(args);
  }
}
